import pluginJs from "@eslint/js";
import html from "@html-eslint/eslint-plugin";

export default [
  pluginJs.configs.recommended,
  {
    languageOptions: {globals: {document: true, window: true, console: true}},
    rules: {
      "no-duplicate-imports": "error",
      "no-self-compare": "error",
      "no-template-curly-in-string": "error",
      "no-unmodified-loop-condition": "error",
      "no-use-before-define": "error",
      "no-useless-assignment": "error",
      "require-atomic-updates": ["error", {"allowProperties": true}],
      "accessor-pairs": ["error", {"getWithoutSet": true}],
      "arrow-body-style": ["error", "as-needed"],
      "block-scoped-var": "error",
      "camelcase": "error",
      "class-methods-use-this": "error",
      "consistent-return": "error",
      "curly": ["error", "multi", "consistent"],
      "default-case": "error",
      "default-case-last": "error",
      "default-param-last": "error",
      "eqeqeq": "error",
      "func-style": ["error", "declaration", {"allowArrowFunctions": true}],
      "grouped-accessor-pairs": ["error", "setBeforeGet"],
      // "id-length": ["error", {"min": 3}],
      "init-declarations": "error",
      "max-classes-per-file": "error",
      "max-lines": ["error", {"max": 300, "skipBlankLines": true, "skipComments": true}],
      "max-lines-per-function": ["error", {"max": 30, "skipBlankLines": true, "skipComments": true}],
      "new-cap": "error",
      "no-alert": "error",
      "no-empty-function": "error",
      "no-eval": "error",
      "no-invalid-this": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-multi-assign": "error",
      "no-multi-str": "error",
      "no-negated-condition": "error",
      "no-nested-ternary": "error",
      "no-new": "error",
      "no-param-reassign": "error",
      "no-return-assign": "error",
      "no-sequences": "error",
      "no-throw-literal": "error",
      "no-undef-init": "error",
      "no-useless-concat": "error",
      "no-useless-constructor": "error",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "object-shorthand": "error",
      "operator-assignment": "error",
      "require-await": "error",
      "array-bracket-spacing": "error",
      "arrow-parens": ["error", "as-needed"],
      "arrow-spacing": "error",
      "brace-style": "error",
      "comma-dangle": ["error", "never"],
      "comma-spacing": "error",
      "comma-style": "error",
      "computed-property-spacing": "error",
      "dot-location": ["error", "property"],
      "func-call-spacing": "error",
      "indent": ["error", 2],
      "key-spacing": "error",
      "keyword-spacing": "error",
      "new-parens": "error",
      "no-floating-decimal": "error",
      "no-multiple-empty-lines": "error",
      "no-return-await": "error",
      "no-trailing-spaces": "error",
      "object-curly-spacing": "error",
      "quotes": "error",
      "semi": "error",
      "space-before-blocks": "error",
      "space-in-parens": "error",
      "space-infix-ops": "error",
      "switch-colon-spacing": "error",
      "template-curly-spacing": "error"
    }
  },
  {
    ...html.configs["flat/recommended"],
    files: ["**/*.html"],
    rules: {
      ...html.configs["flat/recommended"].rules,
      "@html-eslint/no-extra-spacing-text": "error",
      "@html-eslint/no-nested-interactive": "error",
      "@html-eslint/no-inline-styles": "error",
      "@html-eslint/require-button-type": "error",
      "@html-eslint/require-meta-description": "error",
      "@html-eslint/no-skip-heading-levels": "error",
      "@html-eslint/require-form-method": "error",
      "@html-eslint/attrs-newline": "off",
      "@html-eslint/id-naming-convention": ["error", "camelCase"],
      "@html-eslint/indent": ["error", 2],
      "@html-eslint/lowercase": "error",
      "@html-eslint/no-multiple-empty-lines": "error",
      "@html-eslint/no-trailing-spaces": "error",
      "@html-eslint/sort-attrs": ["error", {"priority": ["id", "class", "rel", "type", "name", "src", "href"]}]
    }
  }
];